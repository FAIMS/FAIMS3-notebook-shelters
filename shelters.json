{
  "metadata": {
    "project_status": "New",
    "accesses": [
      "admin",
      "moderator",
      "team"
    ],
    "forms": {},
    "meta": {},
    "access": {},
    "project_lead": "Adela Sobotkova, Rosanna Farb√∏l",
    "lead_institution": "Aarhus University",
    "pre_description": "This notebooks supports the documentation of the current condition, access, and location of Cold War and earlier civil defenses in Aarhus municipality",
    "filenames": [],
    "notebook_version": "1.0",
    "schema_version": "1.0",
    "name": "Aarhus Shelters"
  },
  "ui-specification": {
    "fields": {
      "shelter-type": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Shelter is the most common type of civil defense struture in Aarhus.  Types refer to the plan of the shelter below ground. Indicate which is the likely type if you can make it out during the visit. Use the certainty slider in case of uncertainty! ",
          "variant": "outlined",
          "required": true,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": "NA",
                "label": "NA"
              },
              {
                "value": "VI",
                "label": "VI"
              },
              {
                "value": "V",
                "label": "V"
              },
              {
                "value": "IV",
                "label": "IV"
              },
              {
                "value": "III",
                "label": "III"
              },
              {
                "value": "II",
                "label": "II"
              },
              {
                "value": "I",
                "label": "I"
              },
              {
                "value": "Other",
                "label": "Other"
              }
            ]
          },
          "InputLabelProps": {
            "label": "Shelter Type"
          },
          "id": "shelter-type",
          "name": "shelter-type"
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "feature-id": {
        "component-namespace": "faims-custom",
        "component-name": "TemplatedStringField",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "name": "feature-id",
          "id": "feature-id",
          "helperText": "Human Readable ID",
          "variant": "outlined",
          "required": true,
          "template": "{{id}}-{{shelter-type}}",
          "InputProps": {
            "type": "text",
            "readOnly": true
          },
          "InputLabelProps": {
            "label": "Feature ID"
          },
          "hrid": true,
          "fieldselect10": "id",
          "numberfield": 2,
          "fieldselect11": "shelter-type"
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": false,
            "label": "uncertainty"
          }
        }
      },
      "hridShelter": {
        "component-namespace": "faims-custom",
        "component-name": "TemplatedStringField",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "name": "hridShelter",
          "id": "hridShelter",
          "helperText": "Human Readable ID",
          "variant": "outlined",
          "required": true,
          "template": "{{id}}-{{shelter-type}}",
          "InputProps": {
            "type": "text",
            "readOnly": true
          },
          "InputLabelProps": {
            "label": "Feature ID"
          },
          "hrid": true,
          "linked": "feature-id",
          "fieldselect10": "id",
          "numberfield": 2,
          "fieldselect11": "shelter-type"
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "id": {
        "component-namespace": "faims-custom",
        "component-name": "BasicAutoIncrementer",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "name": "id",
          "id": "id",
          "variant": "outlined",
          "required": true,
          "num_digits": 5,
          "form_id": "General",
          "label": "ID"
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required"
          ]
        ],
        "initialValue": null,
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "belongs-to-shelter-subtype": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "This attribute is relevant only to shelters. Shelter subtype letters refer to how many times the shelter type/design iterates in one location. Each individual iteration needs own record. That way, an individual shelter of type I will have one record and subtype \"Single iteration\", while a cluster of two type I shelters will results in two shelter records of type I and subtype A. Consult your supervisor if in doubt.",
          "variant": "outlined",
          "required": false,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": "Other",
                "label": "Other"
              },
              {
                "value": "Single iteration",
                "label": "Single iteration"
              },
              {
                "value": "A",
                "label": "A"
              },
              {
                "value": "B",
                "label": "B"
              },
              {
                "value": "C",
                "label": "C"
              },
              {
                "value": "D",
                "label": "D"
              },
              {
                "value": "NA",
                "label": "NA"
              },
              {
                "value": "",
                "label": ""
              }
            ]
          },
          "InputLabelProps": {
            "label": "Belongs to shelter subtype"
          },
          "id": "belongs-to-shelter-subtype",
          "name": "belongs-to-shelter-subtype"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "overview-photo": {
        "component-namespace": "faims-custom",
        "component-name": "TakePhoto",
        "type-returned": "faims-attachment::Files",
        "component-parameters": {
          "fullWidth": true,
          "name": "overview-photo",
          "id": "overview-photo",
          "helperText": "Take a photo of the entire extent of the feature with a scale within. ",
          "variant": "outlined",
          "label": "Overview Photo",
          "required": true,
          "helpertext": "The photo should capture the entirety of the feature and its nearest context. It is best taken from a distance"
        },
        "validationSchema": [
          [
            "yup.object"
          ],
          [
            "yup.nullable"
          ]
        ],
        "initialValue": null,
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "take-point-from-gps": {
        "component-namespace": "faims-custom",
        "component-name": "TakePoint",
        "type-returned": "faims-pos::Location",
        "component-parameters": {
          "fullWidth": true,
          "name": "take-point-from-gps",
          "id": "take-point-from-gps",
          "helperText": "Take a point while standing on top of the shelter (if inaccessible make a note of where you stand in the annotation)",
          "variant": "outlined",
          "label": "Take point from GPS",
          "required": true
        },
        "validationSchema": [
          [
            "yup.object"
          ],
          [
            "yup.nullable"
          ],
          [
            "yup.required"
          ]
        ],
        "initialValue": null,
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "locale-description": {
        "component-namespace": "formik-material-ui",
        "component-name": "TextField",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Describe the environs of the shelter or feature, and specify its address so that others can find it easily after you.",
          "variant": "outlined",
          "required": false,
          "InputProps": {
            "type": "string"
          },
          "SelectProps": {},
          "InputLabelProps": {
            "label": "Locale description"
          },
          "FormHelperTextProps": {},
          "id": "locale-description",
          "name": "locale-description"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "landuse-on-top": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Describe what covers the surface of the shelter. Is it overgrown with grass, covered with shrubs, or converted into a playground or ashpalted area?",
          "variant": "outlined",
          "required": true,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": "Grass",
                "label": "Grass"
              },
              {
                "value": "Shrubs",
                "label": "Shrubs"
              },
              {
                "value": "Trees",
                "label": "Trees"
              },
              {
                "value": "Concrete slabs",
                "label": "Concrete slabs"
              },
              {
                "value": " Asphalt",
                "label": " Asphalt"
              },
              {
                "value": " Street",
                "label": " Street"
              },
              {
                "value": " Playground",
                "label": " Playground"
              },
              {
                "value": "Structure",
                "label": "Structure"
              },
              {
                "value": "Other",
                "label": "Other"
              }
            ]
          },
          "InputLabelProps": {
            "label": "Landuse on top"
          },
          "id": "landuse-on-top",
          "name": "landuse-on-top"
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "landuse-around": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Describe briefly the setting of the shelter. If multiple different kinds of landuse co-occur, choose the majority and then add the rest in annotation",
          "variant": "outlined",
          "required": true,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": " Other",
                "label": " Other"
              },
              {
                "value": " Urban structures",
                "label": " Urban structures"
              },
              {
                "value": " Street",
                "label": " Street"
              },
              {
                "value": " Playground or schoolyard",
                "label": " Playground or schoolyard"
              },
              {
                "value": " Forest",
                "label": " Forest"
              },
              {
                "value": " Agricultural field",
                "label": " Agricultural field"
              },
              {
                "value": "Grassland or park",
                "label": "Grassland or park"
              },
              {
                "value": "",
                "label": ""
              }
            ]
          },
          "InputLabelProps": {
            "label": "Landuse around"
          },
          "id": "landuse-around",
          "name": "landuse-around"
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "emergency-exit-shape": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Indicate the shape of emergency exit. If not detectable, select NA.",
          "variant": "outlined",
          "required": true,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": "Round",
                "label": "Round"
              },
              {
                "value": " Square",
                "label": " Square"
              },
              {
                "value": " Other",
                "label": " Other"
              },
              {
                "value": " NA",
                "label": " NA"
              }
            ]
          },
          "InputLabelProps": {
            "label": "Emergency exit shape"
          },
          "id": "emergency-exit-shape",
          "name": "emergency-exit-shape"
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "emergency-exit-location": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "The specific location of an emergency exit will vary with shelter type. A round shelter will have this exit on the top center, while a square shelter will have it off center, to the side or a corner. Please indicate its location relative to shelter plan and use Annotation or pictures for more detail",
          "variant": "outlined",
          "required": true,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": "Central",
                "label": "Central"
              },
              {
                "value": " Side",
                "label": " Side"
              },
              {
                "value": " Corner",
                "label": " Corner"
              },
              {
                "value": " Other",
                "label": " Other"
              },
              {
                "value": " NA",
                "label": " NA"
              }
            ]
          },
          "InputLabelProps": {
            "label": "Emergency exit location"
          },
          "id": "emergency-exit-location",
          "name": "emergency-exit-location"
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "notes-on-emergency-exit": {
        "component-namespace": "formik-material-ui",
        "component-name": "TextField",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Helper Text",
          "variant": "outlined",
          "required": false,
          "InputProps": {
            "type": "text"
          },
          "SelectProps": {},
          "InputLabelProps": {
            "label": "Notes on emergency exit"
          },
          "FormHelperTextProps": {},
          "id": "notes-on-emergency-exit",
          "name": "notes-on-emergency-exit"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "emergency-exit-photo": {
        "component-namespace": "faims-custom",
        "component-name": "TakePhoto",
        "type-returned": "faims-attachment::Files",
        "component-parameters": {
          "fullWidth": true,
          "name": "emergency-exit-photo",
          "id": "emergency-exit-photo",
          "helperText": "Take an extra photo of the emergency exit if it is obscured in the Overview photo",
          "variant": "outlined",
          "label": "Emergency exit photo"
        },
        "validationSchema": [
          [
            "yup.object"
          ],
          [
            "yup.nullable"
          ]
        ],
        "initialValue": null,
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "entryway-type": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Select from the list or define the type using Other + Annotation",
          "variant": "outlined",
          "required": true,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": "Concrete slabs",
                "label": "Concrete slabs"
              },
              {
                "value": " Doorway",
                "label": " Doorway"
              },
              {
                "value": "Access buried or indeterminate",
                "label": "Access buried or indeterminate"
              },
              {
                "value": " Other",
                "label": " Other"
              },
              {
                "value": " NA",
                "label": " NA"
              }
            ]
          },
          "InputLabelProps": {
            "label": "Entryway type"
          },
          "id": "entryway-type",
          "name": "entryway-type"
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "accessiblity-of-shelter-during-visit": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Choose a field from the dropdown",
          "variant": "outlined",
          "required": true,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": "NA",
                "label": "NA"
              },
              {
                "value": " Other",
                "label": " Other"
              },
              {
                "value": " Barred (concrete slabs or earthen cover bar access fully or partially)",
                "label": " Barred (concrete slabs or earthen cover bar access fully or partially)"
              },
              {
                "value": " Sealed (as in a layer of concrete seals a doorway)",
                "label": " Sealed (as in a layer of concrete seals a doorway)"
              },
              {
                "value": " Locked",
                "label": " Locked"
              },
              {
                "value": "Open",
                "label": "Open"
              },
              {
                "value": "",
                "label": ""
              }
            ]
          },
          "InputLabelProps": {
            "label": "Accessiblity of shelter during visit"
          },
          "id": "accessiblity-of-shelter-during-visit",
          "name": "accessiblity-of-shelter-during-visit"
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "entryway-photo": {
        "component-namespace": "faims-custom",
        "component-name": "TakePhoto",
        "type-returned": "faims-attachment::Files",
        "component-parameters": {
          "fullWidth": true,
          "name": "entryway-photo",
          "id": "entryway-photo",
          "helperText": "Take a photo",
          "variant": "outlined",
          "label": "Entryway photo"
        },
        "validationSchema": [
          [
            "yup.object"
          ],
          [
            "yup.nullable"
          ]
        ],
        "initialValue": null,
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "comments-on-entryway": {
        "component-namespace": "formik-material-ui",
        "component-name": "TextField",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Helper Text",
          "variant": "outlined",
          "required": false,
          "InputProps": {
            "type": "text"
          },
          "SelectProps": {},
          "InputLabelProps": {
            "label": "Comments on entryway"
          },
          "FormHelperTextProps": {},
          "id": "comments-on-entryway",
          "name": "comments-on-entryway"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "distance-from-swan-neck-to-emergency-exit-m": {
        "component-namespace": "formik-material-ui",
        "component-name": "TextField",
        "type-returned": "faims-core::Integer",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Can you find a turned tube \"swan neck ventilation\" near the foot of the shelter? If so, measure its distance to the emergency exit in METERS",
          "variant": "outlined",
          "required": false,
          "InputProps": {
            "type": "number"
          },
          "SelectProps": {},
          "InputLabelProps": {
            "label": "Distance from swan-neck to emergency exit (m)"
          },
          "FormHelperTextProps": {},
          "id": "distance-from-swan-neck-to-emergency-exit-m",
          "name": "distance-from-swan-neck-to-emergency-exit-m"
        },
        "validationSchema": [
          [
            "yup.number"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "outside the limits of measurement"
          }
        }
      },
      "entryway-direction": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Use a compass to measure which way the doorway is facing. Use this terminology: West-northwest (WNW) North-northwest (NNW) North-northeast (NNE) East-northeast (ENE) East-southeast (ESE) South-southeast (SSE) South-southwest (SSW) West-southwest (WSW)",
          "variant": "outlined",
          "required": true,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": " OTHER",
                "label": " OTHER"
              },
              {
                "value": " NOT AVAILABLE",
                "label": " NOT AVAILABLE"
              },
              {
                "value": "N",
                "label": "N"
              },
              {
                "value": " NNE",
                "label": " NNE"
              },
              {
                "value": " NE",
                "label": " NE"
              },
              {
                "value": " ENE",
                "label": " ENE"
              },
              {
                "value": " E",
                "label": " E"
              },
              {
                "value": " ESE",
                "label": " ESE"
              },
              {
                "value": " SE",
                "label": " SE"
              },
              {
                "value": " SSE",
                "label": " SSE"
              },
              {
                "value": "S",
                "label": "S"
              },
              {
                "value": "SSW",
                "label": "SSW"
              },
              {
                "value": " SW",
                "label": " SW"
              },
              {
                "value": " WSW",
                "label": " WSW"
              },
              {
                "value": "W",
                "label": "W"
              },
              {
                "value": "WNW",
                "label": "WNW"
              },
              {
                "value": "NW",
                "label": "NW"
              },
              {
                "value": "NNW",
                "label": "NNW"
              },
              {
                "value": "",
                "label": ""
              }
            ]
          },
          "InputLabelProps": {
            "label": "Entryway direction"
          },
          "id": "entryway-direction",
          "name": "entryway-direction"
        },
        "validationSchema": [
          [
            "yup.string"
          ],
          [
            "yup.required"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "interior-description": {
        "component-namespace": "formik-material-ui",
        "component-name": "TextField",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "If the shelter is accessible, look inside and provide a description of internal shape, contents, condition and status.",
          "variant": "outlined",
          "required": false,
          "InputProps": {
            "type": "string"
          },
          "SelectProps": {},
          "InputLabelProps": {
            "label": "Interior description"
          },
          "FormHelperTextProps": {},
          "id": "interior-description",
          "name": "interior-description"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "comments-and-recommendations": {
        "component-namespace": "formik-material-ui",
        "component-name": "TextField",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Helper Text",
          "variant": "outlined",
          "required": false,
          "InputProps": {
            "type": "string"
          },
          "SelectProps": {},
          "InputLabelProps": {
            "label": "Comments and recommendations"
          },
          "FormHelperTextProps": {},
          "id": "comments-and-recommendations",
          "name": "comments-and-recommendations"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "feature-note": {
        "component-namespace": "formik-material-ui",
        "component-name": "TextField",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Comment on feature location (if hard to find) , preservation and, if the feature is not a shelter, describe its characteristics, such as shape, external markers and dimensions here.",
          "variant": "outlined",
          "required": false,
          "InputProps": {
            "type": "text"
          },
          "SelectProps": {},
          "InputLabelProps": {
            "label": "Feature note"
          },
          "FormHelperTextProps": {},
          "id": "feature-note",
          "name": "feature-note"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "feature-source": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "What led you to the shelter or feature? If the map, please indicate pin color in the Annotation",
          "variant": "outlined",
          "required": false,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": "Informant",
                "label": "Informant"
              },
              {
                "value": "Serendipity",
                "label": "Serendipity"
              },
              {
                "value": "Rosannas list",
                "label": "Rosannas list"
              },
              {
                "value": "Map",
                "label": "Map"
              },
              {
                "value": "Other",
                "label": "Other"
              },
              {
                "value": " NA",
                "label": " NA"
              }
            ]
          },
          "InputLabelProps": {
            "label": "Feature source"
          },
          "id": "feature-source",
          "name": "feature-source"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "html-text-3": {
        "component-namespace": "faims-custom",
        "component-name": "RandomStyle",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Emergency exit is a chimney-like feature on top of most shelters. It can be either square or round in plan and may have little vents/windows in it. ",
          "variant": "outlined",
          "label": "Emergency Exit",
          "variant_style": "h5",
          "html_tag": "",
          "id": "html-text-3",
          "name": "html-text-3"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "html-text-6": {
        "component-namespace": "faims-custom",
        "component-name": "RandomStyle",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Provide any other suggestions of what might need recording",
          "variant": "outlined",
          "label": "Final comments",
          "variant_style": "h5",
          "html_tag": "",
          "id": "html-text-6",
          "name": "html-text-6"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "take-point": {
        "component-namespace": "faims-custom",
        "component-name": "TakePoint",
        "type-returned": "faims-pos::Location",
        "component-parameters": {
          "fullWidth": true,
          "name": "take-point",
          "id": "take-point",
          "helperText": "Click to save current location",
          "variant": "outlined",
          "label": "Take point"
        },
        "validationSchema": [
          [
            "yup.object"
          ],
          [
            "yup.nullable"
          ]
        ],
        "initialValue": null,
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "emergency-exit-gps-point": {
        "component-namespace": "faims-custom",
        "component-name": "TakePoint",
        "type-returned": "faims-pos::Location",
        "component-parameters": {
          "fullWidth": true,
          "name": "emergency-exit-gps-point",
          "id": "emergency-exit-gps-point",
          "helperText": "Click to save current location",
          "variant": "outlined",
          "label": "Emergency Exit GPS Point"
        },
        "validationSchema": [
          [
            "yup.object"
          ],
          [
            "yup.nullable"
          ]
        ],
        "initialValue": null,
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "facing-photo-direction": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Which way do you face when taking the overview photo?",
          "variant": "outlined",
          "required": false,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": "OTHER",
                "label": "OTHER"
              },
              {
                "value": " NOT AVAILABLE",
                "label": " NOT AVAILABLE"
              },
              {
                "value": "N",
                "label": "N"
              },
              {
                "value": " NNE",
                "label": " NNE"
              },
              {
                "value": " NE",
                "label": " NE"
              },
              {
                "value": " ENE",
                "label": " ENE"
              },
              {
                "value": " E",
                "label": " E"
              },
              {
                "value": " ESE",
                "label": " ESE"
              },
              {
                "value": " SE",
                "label": " SE"
              },
              {
                "value": " SSE",
                "label": " SSE"
              },
              {
                "value": "S",
                "label": "S"
              },
              {
                "value": "SSW",
                "label": "SSW"
              },
              {
                "value": " SW",
                "label": " SW"
              },
              {
                "value": " WSW",
                "label": " WSW"
              },
              {
                "value": "W",
                "label": "W"
              },
              {
                "value": "WNW",
                "label": "WNW"
              },
              {
                "value": "NW",
                "label": "NW"
              },
              {
                "value": "NNW",
                "label": "NNW"
              },
              {
                "value": "",
                "label": ""
              }
            ]
          },
          "InputLabelProps": {
            "label": "Facing photo direction"
          },
          "id": "facing-photo-direction",
          "name": "facing-photo-direction"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "feature-discovery-status": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Could you locate the shelter/feature or is it undetectable in the area? Provide comments in Feature Note",
          "variant": "outlined",
          "required": false,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": "Located and accessible",
                "label": "Located and accessible"
              },
              {
                "value": " Located and inaccessible",
                "label": " Located and inaccessible"
              },
              {
                "value": " Location indeterminate",
                "label": " Location indeterminate"
              },
              {
                "value": " Other",
                "label": " Other"
              },
              {
                "value": " NA",
                "label": " NA"
              }
            ]
          },
          "InputLabelProps": {
            "label": "Feature discovery status"
          },
          "id": "feature-discovery-status",
          "name": "feature-discovery-status"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "entryway-gps-point": {
        "component-namespace": "faims-custom",
        "component-name": "TakePoint",
        "type-returned": "faims-pos::Location",
        "component-parameters": {
          "fullWidth": true,
          "name": "entryway-gps-point",
          "id": "entryway-gps-point",
          "helperText": "Take a point standing at the base of the entryway",
          "variant": "outlined",
          "label": "Entryway GPS point"
        },
        "validationSchema": [
          [
            "yup.object"
          ],
          [
            "yup.nullable"
          ]
        ],
        "initialValue": null,
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "author": {
        "component-namespace": "faims-custom",
        "component-name": "Select",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "fullWidth": true,
          "helperText": "Who is creating this record?",
          "variant": "outlined",
          "required": false,
          "select": true,
          "InputProps": {},
          "SelectProps": {},
          "ElementProps": {
            "options": [
              {
                "value": "Lisa",
                "label": "Lisa"
              },
              {
                "value": "Agnes",
                "label": "Agnes"
              },
              {
                "value": "Rosanna",
                "label": "Rosanna"
              },
              {
                "value": "Adela",
                "label": "Adela"
              },
              {
                "value": "Shawn",
                "label": "Shawn"
              },
              {
                "value": "Other",
                "label": "Other"
              }
            ]
          },
          "InputLabelProps": {
            "label": "Author"
          },
          "id": "author",
          "name": "author"
        },
        "validationSchema": [
          [
            "yup.string"
          ]
        ],
        "initialValue": "",
        "access": [
          "admin"
        ],
        "meta": {
          "annotation_label": "annotation",
          "annotation": true,
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "DescriptiveText": {
        "component-namespace": "faims-custom",
        "component-name": "RichText",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "label": "DescriptiveText",
          "name": "DescriptiveText",
          "content": "## Civil Defence Features\n\nA number of different civil defence features can be found around Aarhus, from emergency hospital, watch posts to civilian shelters of different design. This form is designed primarily for shelters. If a feature is a shelter, then please select an appropriate type as best as you can surmise from the remains visible on the surface. If the feature is something else (depo, or other), select Other and describe in the Annotation, please.\n\n![Example shelter](https://www.danskkoldkrigsforening.dk/wp-content/uploads/2020/07/D%C3%A6kningsgrav-1.jpg)"
        },
        "meta": {
          "annotation": true,
          "annotation_label": "annotation",
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "SubtypeText": {
        "component-namespace": "faims-custom",
        "component-name": "RichText",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "label": "SubtypeText",
          "name": "SubtypeText",
          "content": "## Type/Subtype Illustration\n\n![](https://www.danskkoldkrigsforening.dk/wp-content/uploads/2020/07/D%C3%A6kningsgrav-2_final.jpg)"
        },
        "meta": {
          "annotation": true,
          "annotation_label": "annotation",
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "EntryWayText": {
        "component-namespace": "faims-custom",
        "component-name": "RichText",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "label": "EntryWayText",
          "name": "EntryWayText",
          "content": "## Shelter Elements\n\nShelters have entryways, vents/emergency exists and other elements, which are visible unless the shelter has been buried or demolished. Please indicate the shape and location of these elements\n\n### Entryway\n\nThe entrance to a shelter is usually through stairs down a gate, often covered by concrete slabs, but sometimes also doorways or other."
        },
        "meta": {
          "annotation": true,
          "annotation_label": "annotation",
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      },
      "InteriorSubtitle": {
        "component-namespace": "faims-custom",
        "component-name": "RichText",
        "type-returned": "faims-core::String",
        "component-parameters": {
          "label": "InteriorSubtitle",
          "name": "InteriorSubtitle",
          "content": "### Interior"
        },
        "meta": {
          "annotation": true,
          "annotation_label": "annotation",
          "uncertainty": {
            "include": true,
            "label": "uncertainty"
          }
        }
      }
    },
    "fviews": {
      "General": {
        "fields": [
          "id",
          "DescriptiveText",
          "hridShelter",
          "author",
          "feature-source",
          "feature-discovery-status",
          "overview-photo",
          "facing-photo-direction",
          "shelter-type",
          "SubtypeText",
          "belongs-to-shelter-subtype",
          "locale-description",
          "take-point-from-gps",
          "landuse-on-top",
          "landuse-around",
          "feature-note"
        ],
        "uidesign": "form",
        "label": "General",
        "description": ""
      },
      "Element": {
        "fields": [
          "EntryWayText",
          "entryway-type",
          "accessiblity-of-shelter-during-visit",
          "entryway-direction",
          "entryway-gps-point",
          "entryway-photo",
          "comments-on-entryway",
          "html-text-3",
          "emergency-exit-shape",
          "emergency-exit-location",
          "distance-from-swan-neck-to-emergency-exit-m",
          "emergency-exit-gps-point",
          "emergency-exit-photo",
          "notes-on-emergency-exit",
          "InteriorSubtitle",
          "interior-description",
          "html-text-6",
          "comments-and-recommendations"
        ],
        "uidesign": "form",
        "label": "Element",
        "description": ""
      }
    },
    "viewsets": {
      "Shelter": {
        "views": [
          "General",
          "Element"
        ],
        "label": "Shelter"
      }
    },
    "visible_types": [
      "Shelter"
    ]
  }
}